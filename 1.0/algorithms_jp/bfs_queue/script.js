window.onload = function () {
document.getElementById('io_arrow').innerHTML = "&rarr;";
document.getElementById('level').innerHTML = "&#9733; &#9733; ";
document.getElementById('ptitle').innerHTML = "グラフの接続性";
document.getElementById('ptitle_en').innerHTML = "Connectivity of Graph";
document.getElementById('input_comment').innerHTML = "無向グラフ<ul><li>ノードの数N &le; 1,000</li><li>エッジの数M &le; 1,000</li></ul>";
document.getElementById('output_comment').innerHTML = "各ノードの訪問状態";
document.getElementById('motivation').innerHTML = "グラフにおける最も基本的な操作は、ある始点から可能なエッジをたどっていき、ノードの接続性を調べることです。";
document.getElementById('description').innerHTML = "適当な始点から出発し、グラフの全てのノードを体系的に訪問してください。";
document.getElementById('input_panel').innerHTML = '<img src="../../problems/connectivity/input.svg" width="340"/>';
document.getElementById('output_panel').innerHTML = '<img src="../../problems/connectivity/output.svg" width="340"/>';
document.getElementById('algorithm_icon').innerHTML = '<img src="../../icons/algorithms/bfs_queue.svg" width="100"/>';
document.getElementById('atitle').innerHTML = "幅優先探索";
document.getElementById('atitle_en').innerHTML = "Breadth First Search";
document.getElementById('abstract').innerHTML = "幅優先探索(BFS: Breadth First Search)は、グラフのノードを体系的に訪問するアルゴリズムで、探索途中のノードをキューで管理します。";
document.getElementById('explanation').innerHTML = "幅優先探索は、キューを応用して始点から近い順にノードを訪問します。ノードの訪問状態を色(color)で表します。白(WHITE:0)が未訪問、灰(GRAY:1)が訪問済み、黒(BLACK:2)が訪問完了済みを表します。<br><br>最初、始点のノードをキューに入れておきます。続いて、キューが空になるまで、キューから取り出したノードの訪問を完了していきます。訪問が完了したノードに隣接しかつ未訪問のノードを訪問してキューに入れていきます。";
document.getElementById('note').innerHTML = "キューにデータを挿入するenqueue操作はO(1)、データを取り出すdequeue操作もO(1)です。キューを用いた幅優先探索では、各ノードから隣接するノードを走査する過程で全てのエッジが走査されます。また、各ノードに対するアクションは、訪問と完了です。隣接するノードの走査をリストで行う隣接リストのグラフを用いた幅優先探索の計算量はO(N + M)となります。一方、隣接行列の場合は、各ノードの隣接ノードの走査にO(N)の計算量が必要なため、オーダーはO($N^2$)になります";
document.getElementById('application').innerHTML = "幅優先探索では、始点からの距離が同じノードを含む層が順番に訪問済み・完了済みになります。始点からの距離が近い順番にノードが訪問されるため、距離に関する問題に応用することができます。また、幅優先探索は有向グラフに対しても適用することができます。";
document.getElementById('structure').innerHTML = '<tr><td style="text-align:center;width:100"><img src="../../icons/structures/GR.svg" /><br/><br/></td><td class="frame">&nbsp;<img height="160" class="frame_svg" valign="middle" src="space_g.svg" />&nbsp;</td></tr><tr><td></td><td class="caption">無向グラフ</td></tr>';
document.getElementById('variable').innerHTML = '<tr><th class="scene_desc" colspan="3">データ</th></tr><tr><td class="symbol"><img src="variable_color.svg" /></td><td>ノードの訪問状態</td><td class="code">color</td></tr>';
document.getElementById('formula').innerHTML = '<tr><th class="scene_desc" colspan="3">始点の決定</th></tr><tr><td class="symbol"><img src="formula_tail.svg" /></td><td>始点をキューに挿入します。</td><td class="code">que.enqueue(s)</td></tr><tr><th class="scene_desc" colspan="3">探索</th></tr><tr><td class="symbol"><img src="formula_vi.svg" /></td><td>隣接するノードを訪問します。</td><td class="code">color[v] &larr; GRAY</td></tr><tr><td class="symbol"><img src="formula_tail.svg" /></td><td>訪問したノードをキューに挿入します。</td><td class="code">que.enqueue(v)</td></tr><tr><td class="symbol"><img src="formula_ui.svg" /></td><td>キューから取り出したノードの訪問を完了します。</td><td class="code">color[u] &larr; BLACK</td></tr><tr><td class="symbol"><img src="formula_visited.svg" /></td><td>訪問済みのノードのグループを拡張していきます。</td><td class="code">colorがGRAYのノード</td></tr><tr><td class="symbol"><img src="formula_finished.svg" /></td><td>完了済みのノードのクループを拡張していきます。</td><td class="code">colorがBLACKのノード</td></tr>';
document.getElementById('scheme').innerHTML = '<tr><td style="text-align:center;width:100"><img src="anim_qr.svg" width="80"/></td><td class="frame"><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step1.svg" /><p class="caption">キューから取り出したノードの訪問を完了します。</p><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step2.svg" /><p class="caption">隣接するノードを訪問し、キューに挿入します。</p></td></tr>';
document.getElementById('scene').innerHTML = '<div><p><b class="scene_desc">始点の決定</b><br/><img src="scene_0.svg" alt="幅優先探索 | 始点の決定" title="幅優先探索 | 始点の決定"/></p></div><div><p><b class="scene_desc">探索</b><br/><img src="scene_1.svg" alt="幅優先探索 | 探索" title="幅優先探索 | 探索"/></p></div>';
document.getElementById('complexity').innerHTML = '<img src="../../../icons/complexity/quad.svg" /><img src="../../../icons/complexity/linear.svg" />';
document.getElementById('prerequisites').innerHTML = '<img src="../../icons/algorithms/queue_simulation.svg" width="60"/>';
MathJax.Hub.Queue(["Typeset",MathJax.Hub]);};
window.onload = function () {
document.getElementById('io_arrow').innerHTML = "&rarr;";
document.getElementById('level').innerHTML = "&#9733; &#9733; &#9734; ";
document.getElementById('ptitle').innerHTML = "トポロジカルソート";
document.getElementById('ptitle_en').innerHTML = "Topological Sort";
document.getElementById('input_comment').innerHTML = "有向グラフ<ul><li>ノードの数N &le; 100,000</li><li>エッジの数M &le; 100,000</li></ul>";
document.getElementById('output_comment').innerHTML = "各ノードの実行する順番";
document.getElementById('motivation').innerHTML = "依存関係のある複数のタスクを処理する場合は、前提タスクが全て終了してから当該タスクが実行されるように、タスクを処理する順番を決めなければなりません。";
document.getElementById('description').innerHTML = "タスクと依存関係を表す有向グラフから、タスクを処理する順番を求めてください。あるタスクを処理するとき、それが依存する全てのタスクが終了している必要があります。有向グラフのエッジ(u, v)は、vがuに依存していることを示します。";
document.getElementById('input_panel').innerHTML = '<img src="../../problems/topological_sort/input.svg" width="340"/>';
document.getElementById('output_panel').innerHTML = '<img src="../../problems/topological_sort/output.svg" width="340"/>';
document.getElementById('algorithm_icon').innerHTML = '<img src="../../icons/algorithms/dfs_tsort.svg" width="100"/>';
document.getElementById('atitle').innerHTML = "Tarjanのアルゴリズム";
document.getElementById('atitle_en').innerHTML = "Tarjan's Algorithm";
document.getElementById('abstract').innerHTML = "深さ優先探索の訪問完了順でトポロジカルソートを行い、順番が確定したノードを連結リストに追加していきます。このアルゴリズムはTarjanのアルゴリズムとして知られています。";
document.getElementById('explanation').innerHTML = "深さ優先探索において、ノードの訪問が完了した順番で、ノードをリストに追加していきます。このとき、リストの先頭から追加することによって、最終的にトポロジカルソート順にノードをたどることができます。深さ優先探索の性質から、訪問が完了したノードuをリストに追加するときには、uに依存する全てのノードがすでにリストに入っている状態になります。";
document.getElementById('note').innerHTML = "深さ優先探索のオーダーでO(N + M)になります。";
document.getElementById('application').innerHTML = "前述のとおり、トポロジカルソートには多くの応用分野があります。深さ優先探索でも、幅優先探索でも、トポロジカルソートとしては同じ機能を提供します。実装面では深さ優先探索の方が簡潔に行えますが、大きなグラフに対しては、再帰が深くなってしまう問題があるため、幅優先探索が適している場合もあります。";
document.getElementById('structure').innerHTML = '<tr><td style="text-align:center;width:100"><img src="../../icons/structures/DGR.svg" /><br/><br/><img src="../../icons/structures/DA1D.svg" /><br/><br/></td><td class="frame">&nbsp;<img height="160" class="frame_svg" valign="middle" src="space_st.svg" />&nbsp;</td></tr><tr><td></td><td class="caption">有向グラフと連結リスト</td></tr>';
document.getElementById('variable').innerHTML = '<tr><th class="scene_desc" colspan="3">データ</th></tr><tr><td class="symbol"><img src="variable_nodeId.svg" /></td><td>ノード番号</td><td class="code">nodeId</td></tr>';
document.getElementById('formula').innerHTML = '<tr><th class="scene_desc" colspan="3">ソート</th></tr><tr><td class="symbol"><img src="formula_uv.svg" /></td><td>ノードを訪問します。</td><td class="code">color[u] &larr; GRAY</td></tr><tr><td class="symbol"><img src="formula_uf.svg" /></td><td>ノードの訪問を完了し、順序を確定します。</td><td class="code">color[v] &larr; BLACK</td></tr><tr><td class="symbol"><img src="formula_create.svg" /></td><td>順序が確定したノードをリストの先頭に追加します。</td><td class="code">list.insert(u)</td></tr><tr><td class="symbol"><img src="formula_visited.svg" /></td><td>訪問済みのノードのグループを拡張していきます。</td><td class="code">colorがGRAYのノード</td></tr><tr><td class="symbol"><img src="formula_finished.svg" /></td><td>完了済みのノードのグループを拡張していきます。</td><td class="code">colorがBLACKのノード</td></tr>';
document.getElementById('scheme').innerHTML = '<tr><td style="text-align:center;width:100"><img src="anim_qr.svg" width="80"/></td><td class="frame"><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step1.svg" /><p class="caption">ノードを訪問します。</p><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step2.svg" /><p class="caption">ノードの訪問を完了して、順番を決定します。</p></td></tr>';
document.getElementById('scene').innerHTML = '<div><p><b class="scene_desc">ソート</b><br/><img src="scene_0.svg" alt="Tarjanのアルゴリズム | ソート" title="Tarjanのアルゴリズム | ソート"/></p></div>';
document.getElementById('complexity').innerHTML = '<img src="../../../icons/complexity/linear.svg" />';
document.getElementById('prerequisites').innerHTML = '<img src="../../icons/algorithms/dfs_stack.svg" width="60"/>';
MathJax.Hub.Queue(["Typeset",MathJax.Hub]);};
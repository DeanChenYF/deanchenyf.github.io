var variable_content = '<tr><th class="scene_desc" colspan="3">データ</th></tr><tr><td class="symbol"><img src="variable_dist.svg" /></td><td>始点から各ノードへの暫定最短距離</td><td class="code">dist</td></tr><tr><td class="symbol"><img src="variable_parent.svg" /></td><td>最短経路木における親</td><td class="code">parent</td></tr><tr><td class="symbol"><img src="variable_weight.svg" /></td><td>ノード間の距離</td><td class="code">weight</td></tr>';
var formula_content = '<tr><th class="scene_desc" colspan="3">始点の決定と初期化</th></tr><tr><td class="symbol"><img src="formula_source.svg" /></td><td>始点の距離を0に初期化します。</td><td class="code">dist[s] &larr; 0</td></tr><tr><td class="symbol"><img src="formula_others.svg" /></td><td>その他のノードの暫定距離を大きな値で初期化します。</td><td class="code">dist[v] &larr; INF</td></tr><tr><th class="scene_desc" colspan="3">最短経路木の構築</th></tr><tr><td class="symbol"><img src="formula_select.svg" /></td><td>暫定距離が最小のノードを探します。</td><td class="code"># find minimum</td></tr><tr><td class="symbol"><img src="formula_u.svg" /></td><td>暫定距離が最も小さいノードを指します。</td><td class="code">u</td></tr><tr><td class="symbol"><img src="formula_v.svg" /></td><td>ノードの暫定距離と親を更新します。</td><td class="code">if dist[v] &gt; dist[u] + weight[u][v]:<br>&nbsp;&nbsp;&nbsp;&nbsp;dist[v] &larr; dist[u] + weight[u][v]<br>&nbsp;&nbsp;&nbsp;&nbsp;parent[v] &larr; u</td></tr><tr><td class="symbol"><img src="formula_edges.svg" /></td><td>最短経路木の暫定エッジを表します。</td><td class="code">(v, parent[v])</td></tr><tr><td class="symbol"><img src="formula_finished.svg" /></td><td>最短経路木を拡張していきます。</td><td class="code">Tにuを含める</td></tr><tr><th class="scene_desc" colspan="3">最短経路木を出力</th></tr><tr><td class="symbol"><img src="formula_all.svg" /></td><td>親の情報から最短経路木を構築します。</td><td class="code"></td></tr>';

window.onload = function () {
document.getElementById('io_arrow').innerHTML = "&rarr;";
document.getElementById('level').innerHTML = "&#9733; &#9733; &#9734; ";
document.getElementById('ptitle').innerHTML = "点の凸包";
document.getElementById('ptitle_en').innerHTML = "Convex Hull";
document.getElementById('input_comment').innerHTML = "平面上の点群<ul><li>点の数N &le; 1,000</li></ul>";
document.getElementById('output_comment').innerHTML = "点を全て包む面積最小の凸多角形";
document.getElementById('motivation').innerHTML = "点の凸包とは、全ての点を含む面積が最小の凸多角形を求めることです。凸多角形とは、内部に凹んでいない多角形です。";
document.getElementById('description').innerHTML = "与えられた点の集合の、凸包を求めてください。";
document.getElementById('input_panel').innerHTML = '<img src="../../problems/convex_hull_small/input.svg" width="340"/>';
document.getElementById('output_panel').innerHTML = '<img src="../../problems/convex_hull_small/output.svg" width="340"/>';
document.getElementById('algorithm_icon').innerHTML = '<img src="../../icons/algorithms/gift_wrapping.svg" width="100"/>';
document.getElementById('atitle').innerHTML = "ギフトラッピング";
document.getElementById('atitle_en').innerHTML = "Gift Wrapping";
document.getElementById('abstract').innerHTML = "ギフトラッピング法は、品物をラッピングするように、凸包の辺を１つずつ追加していく素朴なアルゴリズムです。";
document.getElementById('explanation').innerHTML = "ギフトラッピング法またはJarvis's アルゴリズムは、凸包を形成する辺を、線形探索で探していくアルゴリズムです。<br/><br/>まず、凸包に必ず含まれる点として始点を１つ選びます。始点として、x座標が最も小さいもの（最も左にあるもの）、そのような点が複数ある場合は、その中でy座標が最も小さいものを選びます。<br/><br/>続いて、この始点から凸包に含まれる辺を繋げていきます。凸包の最後に追加された辺の端点をheadとします。最初は始点がheadです。各ステップで、headを中心として、最も反時計回りの角度をなす辺を探し、その端点tを凸包に含めます。続いて点tをheadとして同じ処理を繰り返します。headが始点に到達したとき凸包が完成します。";
document.getElementById('note').innerHTML = "ギフトラッピング法の計算量は、入力の点の状態に依存します。得られる凸包の辺の数をHとすると、各辺を追加するためにN個の点について探索を行うので、オーダーはO(HN)となります。";
document.getElementById('application').innerHTML = "ギフトラッピング法は、凸包の辺の数が比較的少ない入力に対して効率よく動作しますが、凸包に含まれる点（辺）の数が多いアプリケーションには適用が難しくなります。";
document.getElementById('structure').innerHTML = '<tr><td style="text-align:center;width:100"><img src="../../icons/structures/P2D.svg" /><br/><br/></td><td class="frame">&nbsp;<img height="160" class="frame_svg" valign="middle" src="space_st.svg" />&nbsp;</td></tr><tr><td></td><td class="caption">２次元点群</td></tr>';
document.getElementById('variable').innerHTML = '<tr><th class="scene_desc" colspan="3">データ</th></tr>';
document.getElementById('formula').innerHTML = '<tr><th class="scene_desc" colspan="3">凸包の構築</th></tr><tr><td class="symbol"><img src="formula_order.svg" /></td><td>最も左にある点を探します。</td><td class="code"></td></tr><tr><td class="symbol"><img src="formula_select.svg" /></td><td>起点を中心に、最も反時計回りにある点を選択します。</td><td class="code"></td></tr><tr><td class="symbol"><img src="formula_pointer.svg" /></td><td>選ばれた点を指します。</td><td class="code">t</td></tr><tr><td class="symbol"><img src="formula_head.svg" /></td><td>点を凸包に追加します。</td><td class="code"></td></tr><tr><td class="symbol"><img src="formula_trace.svg" /></td><td>凸包の辺を確定していきます。</td><td class="code"></td></tr>';
document.getElementById('scheme').innerHTML = '<tr><td style="text-align:center;width:100"><img src="anim_qr.svg" width="80"/></td><td class="frame"><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step1.svg" /><p class="caption">起点を中心に、最も反時計回りにある点を探します。</p><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step2.svg" /><p class="caption">選ばれた点を凸包に追加し、新たな起点とします。</p></td></tr>';
document.getElementById('scene').innerHTML = '<div><p><b class="scene_desc">凸包の構築</b><br/><img src="scene_0.svg" alt="ギフトラッピング | 凸包の構築" title="ギフトラッピング | 凸包の構築"/></p></div>';
document.getElementById('complexity').innerHTML = '<img src="../../../icons/complexity/quad.svg" />';
document.getElementById('prerequisites').innerHTML = '';
MathJax.Hub.Queue(["Typeset",MathJax.Hub]);};
window.onload = function () {
document.getElementById('io_arrow').innerHTML = "&rarr;";
document.getElementById('level').innerHTML = "&#9733; ";
document.getElementById('ptitle').innerHTML = "整数の列の最小値の位置";
document.getElementById('ptitle_en').innerHTML = "Place of Minimum Element in Array";
document.getElementById('input_comment').innerHTML = "N個の整数の列";
document.getElementById('output_comment').innerHTML = "最小値の位置";
document.getElementById('motivation').innerHTML = "与えられるデータが順序のある列の場合、目的の「値」よりも、その要素の「位置」がアルゴリズムやプログラムの利便性を高くすることがあります。";
document.getElementById('description').innerHTML = "与えられたN個の整数の列の要素の中で、最も小さい要素の「位置」を求めてください。";
document.getElementById('input_panel').innerHTML = '<img src="../../problems/minimum_of_integers_index/input.svg" width="340"/>';
document.getElementById('output_panel').innerHTML = '<img src="../../problems/minimum_of_integers_index/output.svg" width="340"/>';
document.getElementById('algorithm_icon').innerHTML = '<img src="../../icons/algorithms/minimum_of_integers_index.svg" width="100"/>';
document.getElementById('atitle').innerHTML = "最小要素の位置（ミニマムインデックス）";
document.getElementById('atitle_en').innerHTML = "Index of Minimum Value";
document.getElementById('abstract').innerHTML = "与えられたデータの列を配列で管理し、最小値を保持する変数を使わずに、最小値を保持する配列要素の「位置」に目印を付けていきます。";
document.getElementById('explanation').innerHTML = "最初に目印を配列の先頭に置き、配列の先頭要素から順番に見ていきます。目印の付いている現在の最小値と比較し、見ている値が小さければ目印を移動します。最後に目印が付いている要素が最小値になり、その位置が求めたいものになります。";
document.getElementById('note').innerHTML = "以降はこの処理をより使いやすいようにminimum(A, a, b)という関数として利用します。この関数は配列Aのa番目の要素からb-1番目の要素の中で最小値の位置を返すものとします。";
document.getElementById('application').innerHTML = "配列あるいはその部分列内の最小値または最大値の位置を求める処理は、様々なアルゴリズムに応用されます。例えば、配列の特定範囲から最小値の位置を求める処理は、初等的整列アルゴリズムの選択ソートに応用されます。";
document.getElementById('structure').innerHTML = '<tr><td style="text-align:center;width:100"><img src="../../icons/structures/A1D.svg" /><br/><br/></td><td class="frame">&nbsp;<img height="160" class="frame_svg" valign="middle" src="space_st.svg" />&nbsp;</td></tr><tr><td></td><td class="caption">一次元配列</td></tr>';
document.getElementById('variable').innerHTML = '<tr><th class="scene_desc" colspan="3">データ</th></tr><tr><td class="symbol"><img src="variable_A.svg" /></td><td>整数の列</td><td class="code">A</td></tr>';
document.getElementById('formula').innerHTML = '<tr><th class="scene_desc" colspan="3">入力</th></tr><tr><td class="symbol"><img src="formula_all.svg" /></td><td>整数の列を読み込みます。</td><td class="code"></td></tr><tr><th class="scene_desc" colspan="3">最小値の位置を更新</th></tr><tr><td class="symbol"><img src="formula_select.svg" /></td><td>現在の要素と最小値を比較します。</td><td class="code">if A[i] < A[mini]:</td></tr><tr><td class="symbol"><img src="formula_cp.svg" /></td><td>最小値の位置を指します。</td><td class="code">mini</td></tr><tr><td class="symbol"><img src="formula_passed.svg" /></td><td>調べ終わった要素を拡張していきます。</td><td class="code">区間[0, i]</td></tr><tr><th class="scene_desc" colspan="3">出力</th></tr><tr><td class="symbol"><img src="formula_out.svg" /></td><td>最小値の位置を出力します。</td><td class="code"></td></tr>';
document.getElementById('scheme').innerHTML = '<tr><td style="text-align:center;width:100"><img src="anim_qr.svg" width="80"/></td><td class="frame"><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step1.svg" /><p class="caption">現在地の値と、最小値を比較します。</p><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step2.svg" /><p class="caption">小さい方を選びます。</p></td></tr>';
document.getElementById('scene').innerHTML = '<div><p><b class="scene_desc">入力</b><br/><img src="scene_0.svg" alt="最小要素の位置（ミニマムインデックス） | 入力" title="最小要素の位置（ミニマムインデックス） | 入力"/></p></div><div><p><b class="scene_desc">最小値の位置を更新</b><br/><img src="scene_1.svg" alt="最小要素の位置（ミニマムインデックス） | 最小値の位置を更新" title="最小要素の位置（ミニマムインデックス） | 最小値の位置を更新"/></p></div><div><p><b class="scene_desc">出力</b><br/><img src="scene_2.svg" alt="最小要素の位置（ミニマムインデックス） | 出力" title="最小要素の位置（ミニマムインデックス） | 出力"/></p></div>';
document.getElementById('complexity').innerHTML = '';
document.getElementById('prerequisites').innerHTML = '';
MathJax.Hub.Queue(["Typeset",MathJax.Hub]);};
window.onload = function () {
document.getElementById('io_arrow').innerHTML = "&rarr;";
document.getElementById('level').innerHTML = "&#9733; ";
document.getElementById('ptitle').innerHTML = "整数の集合の最小値";
document.getElementById('ptitle_en').innerHTML = "Minimum Element in Integers";
document.getElementById('input_comment').innerHTML = "N個の整数の集合";
document.getElementById('output_comment').innerHTML = "最小値の値";
document.getElementById('motivation').innerHTML = "データの集合に対する最小値・最大値は、データの全ての要素を参照して得られる最も汎用的な値のひとつです。これらの値を求める処理は、多くのアプリケーションやアルゴリズムに現れます。";
document.getElementById('description').innerHTML = "与えられたN個の整数の中で最も小さい「値」を求めてください。";
document.getElementById('input_panel').innerHTML = '<img src="../../problems/minimum_of_integers_value/input.svg" width="340"/>';
document.getElementById('output_panel').innerHTML = '<img src="../../problems/minimum_of_integers_value/output.svg" width="340"/>';
document.getElementById('algorithm_icon').innerHTML = '<img src="../../icons/algorithms/minimum_of_integers_value.svg" width="100"/>';
document.getElementById('atitle').innerHTML = "最小要素の値（ミニマム）";
document.getElementById('atitle_en').innerHTML = "Minimum";
document.getElementById('abstract').innerHTML = "与えられた整数の集合を１次元の配列変数に格納します。この配列以外に、最小値を格納する変数を用意します。";
document.getElementById('explanation').innerHTML = "配列の要素を先頭から順番に見ていき、それまでの最小値と比較し、現在の要素の方が小さければ最小値を更新していきます。最小値は適切に初期化します。最小を求めるので、変数の初期値は非常に大きい値に設定しておくか、配列のいずれかの要素を設定しておきます（例えば最初の要素）。<br><br>本事典では、非常に大きい値を表すシンボルとして&#8734;、対応するコード中の定数としてINFという表記を用います。";
document.getElementById('note').innerHTML = "最大値を求める場合は、例えば変数maxvを用意し、A[i] < minv の部分をA[i] > maxv へ置き換えます。最大値の場合はmaxvを十分小さい値に設定する必要があることに注意してください。";
document.getElementById('application').innerHTML = "配列あるいはその部分列内の最小値または最大値を求める処理は、様々なアルゴリズムやアプリケーションに現れます。";
document.getElementById('structure').innerHTML = '<tr><td style="text-align:center;width:100"><img src="../../icons/structures/A1D.svg" /><br/><br/><img src="../../icons/structures/A0D.svg" /><br/><br/></td><td class="frame">&nbsp;<img height="160" class="frame_svg" valign="middle" src="space_st.svg" />&nbsp;</td></tr><tr><td></td><td class="caption">一次元配列とシングルノード</td></tr>';
document.getElementById('variable').innerHTML = '<tr><th class="scene_desc" colspan="3">データ</th></tr><tr><td class="symbol"><img src="variable_A.svg" /></td><td>入力の整数の列</td><td class="code">A</td></tr><tr><td class="symbol"><img src="variable_minv.svg" /></td><td>最小値</td><td class="code">minv</td></tr>';
document.getElementById('formula').innerHTML = '<tr><th class="scene_desc" colspan="3">入力と初期化</th></tr><tr><td class="symbol"><img src="formula_in.svg" /></td><td>整数の列を読み込みます。</td><td class="code"></td></tr><tr><td class="symbol"><img src="formula_init.svg" /></td><td>最小値を初期化します。</td><td class="code">minv &larr; INF</td></tr><tr><th class="scene_desc" colspan="3">最小値の更新</th></tr><tr><td class="symbol"><img src="formula_select.svg" /></td><td>配列の要素と最小値を比較します。</td><td class="code">if A[i] &lt; minv:</td></tr><tr><td class="symbol"><img src="formula_cp.svg" /></td><td>最小値を更新できる要素を指します。</td><td class="code">i</td></tr><tr><td class="symbol"><img src="formula_write.svg" /></td><td>最小値を更新します。</td><td class="code">minv &larr; A[i]</td></tr><tr><td class="symbol"><img src="formula_passed.svg" /></td><td>調べ終わった要素を拡張していきます。</td><td class="code">区間[0, i]</td></tr><tr><th class="scene_desc" colspan="3">出力</th></tr><tr><td class="symbol"><img src="formula_out.svg" /></td><td>最小値を出力します。</td><td class="code"></td></tr>';
document.getElementById('scheme').innerHTML = '<tr><td style="text-align:center;width:100"><img src="anim_qr.svg" width="80"/></td><td class="frame"><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step1.svg" /><p class="caption">数列の要素が最小値より小さいか調べます。</p><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step2.svg" /><p class="caption">最小値を更新します。</p></td></tr>';
document.getElementById('scene').innerHTML = '<div><p><b class="scene_desc">入力と初期化</b><br/><img src="scene_0.svg" alt="最小要素の値（ミニマム） | 入力と初期化" title="最小要素の値（ミニマム） | 入力と初期化"/></p></div><div><p><b class="scene_desc">最小値の更新</b><br/><img src="scene_1.svg" alt="最小要素の値（ミニマム） | 最小値の更新" title="最小要素の値（ミニマム） | 最小値の更新"/></p></div><div><p><b class="scene_desc">出力</b><br/><img src="scene_2.svg" alt="最小要素の値（ミニマム） | 出力" title="最小要素の値（ミニマム） | 出力"/></p></div>';
document.getElementById('complexity').innerHTML = '';
document.getElementById('prerequisites').innerHTML = '';
MathJax.Hub.Queue(["Typeset",MathJax.Hub]);};
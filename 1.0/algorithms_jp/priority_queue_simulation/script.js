window.onload = function () {
document.getElementById('io_arrow').innerHTML = "&rarr;";
document.getElementById('level').innerHTML = "&#9733; &#9733; &#9734; ";
document.getElementById('ptitle').innerHTML = "高優先度データ先出";
document.getElementById('ptitle_en').innerHTML = "Dequeue by Priority";
document.getElementById('input_comment').innerHTML = "追加するデータ<ul><li>操作の数Q &le; 100,000</li></ul>";
document.getElementById('output_comment').innerHTML = "優先度に従って取り出されるデータ";
document.getElementById('motivation').innerHTML = "データを追加していき、優先度が最も高いものから取り出すデータ構造は、多くのアルゴリズムで応用されます。";
document.getElementById('description').innerHTML = "優先度が最も高いデータ（ここでは値が大きいもの）を優先的に取り出すルールに従ったデータ構造を実装してください。";
document.getElementById('input_panel').innerHTML = '<img src="../../problems/priority_queue/input.svg" width="340"/>';
document.getElementById('output_panel').innerHTML = '<img src="../../problems/priority_queue/output.svg" width="340"/>';
document.getElementById('algorithm_icon').innerHTML = '<img src="../../icons/algorithms/priority_queue_simulation.svg" width="100"/>';
document.getElementById('atitle').innerHTML = "優先度付きキュー";
document.getElementById('atitle_en').innerHTML = "Priority Queue";
document.getElementById('abstract').innerHTML = "優先度付きキューは、優先度が高いものから取り出されるキューです。データをヒープ構造で保持しておくことで、高速に要求に答えることができます。キューの中の要素数が動的に変化するため、おおよそ完全二分木構造のサイズNに加えて、ヒープの要素数を表すヒープサイズを管理します。";
document.getElementById('explanation').innerHTML = "優先度付きキューに要素が挿入されたときは、ヒープの末尾に追加し、必要に応じてその場所を起点としてアップヒープを実行します。一方、データはヒープの根から取り出されます（削除されます）。空いた根にヒープの末尾の要素をコピーし、ヒープのサイズを１減らし、根からダウンヒープを実行することにより最大ヒープを再構築します。";
document.getElementById('note').innerHTML = "データの挿入にはアップヒープが伴うため、優先度付きキューに対する挿入のオーダーはO(log N)となります。一方、データの取り出し（削除）にはダウンヒープが伴うため、取得のオーダーもO(log N)となります。";
document.getElementById('application').innerHTML = "オペレーティングシステムにおけるプロセスの処理など、優先度付きキューは順番を管理するアプリケーションに広く使われています。また、最短経路を求めるダイクストラのアルゴリズムなど、高等的なアルゴリズムの基盤データ構造として応用されています。";
document.getElementById('structure').innerHTML = '<tr><td style="text-align:center;width:100"><img src="../../icons/structures/ACBT.svg" /><br/><br/></td><td class="frame">&nbsp;<img height="160" class="frame_svg" valign="middle" src="space_t.svg" />&nbsp;</td></tr><tr><td></td><td class="caption">おおよそ完全二分木</td></tr>';
document.getElementById('variable').innerHTML = '<tr><th class="scene_desc" colspan="3">データ</th></tr><tr><td class="symbol"><img src="variable_A.svg" /></td><td>キューの要素</td><td class="code">A</td></tr>';
document.getElementById('formula').innerHTML = '<tr><th class="scene_desc" colspan="3">初期化</th></tr><tr><td class="symbol"><img src="formula_input.svg" /></td><td>ヒープ条件を満たす整数の列を設定します。</td><td class="code"></td></tr><tr><th class="scene_desc" colspan="3">データの挿入と削除</th></tr><tr><td class="symbol"><img src="formula_write.svg" /></td><td>要素を挿入します。</td><td class="code">A[heapSize++] &larr; x</td></tr><tr><td class="symbol"><img src="formula_upRotation.svg" /></td><td>アップヒープを行います。</td><td class="code">upHeap(heapSize-1)</td></tr><tr><td class="symbol"><img src="formula_downRotation.svg" /></td><td>ダウンヒープを行います。</td><td class="code">downHeap(0)</td></tr><tr><td class="symbol"><img src="formula_heap.svg" /></td><td>キューに入っている要素を表します。</td><td class="code">区間[0, heapSize)</td></tr>';
document.getElementById('scheme').innerHTML = '<tr><td style="text-align:center;width:100"><img src="anim_qr.svg" width="80"/></td><td class="frame"><hr class="separator"/><img height="160" class="frame_svg" src="scheme_insert.svg" /><p class="caption">データを挿入します</p><hr class="separator"/><img height="160" class="frame_svg" src="scheme_extract.svg" /><p class="caption">最も優先度の高いデータを取得・削除します。</p></td></tr>';
document.getElementById('scene').innerHTML = '<div><p><b class="scene_desc">初期化</b><br/><img src="scene_0.svg" alt="優先度付きキュー | 初期化" title="優先度付きキュー | 初期化"/></p></div><div><p><b class="scene_desc">データの挿入と削除</b><br/><img src="scene_1.svg" alt="優先度付きキュー | データの挿入と削除" title="優先度付きキュー | データの挿入と削除"/></p></div>';
document.getElementById('complexity').innerHTML = '<img src="../../../icons/complexity/log.svg" />';
document.getElementById('prerequisites').innerHTML = '<img src="../../icons/algorithms/upheap_simulation.svg" width="60"/><img src="../../icons/algorithms/downheap_simulation.svg" width="60"/><img src="../../icons/algorithms/queue_simulation.svg" width="60"/>';
MathJax.Hub.Queue(["Typeset",MathJax.Hub]);};
window.onload = function () {
document.getElementById('io_arrow').innerHTML = "&rarr;";
document.getElementById('level').innerHTML = "&#9733; ";
document.getElementById('ptitle').innerHTML = "整數的合計";
document.getElementById('ptitle_en').innerHTML = "Sum of Integers";
document.getElementById('input_comment').innerHTML = "含有 N 個整數的序列";
document.getElementById('output_comment').innerHTML = "所有整數的合計值";
document.getElementById('motivation').innerHTML = "要計算陣列元素的合計值，得先載入所有元素的資訊才能夠計算。";
document.getElementById('description').innerHTML = "想計算 N 個整數的總和。";
document.getElementById('input_panel').innerHTML = '<img src="../../problems/sum_of_integers/input.svg" width="340"/>';
document.getElementById('output_panel').innerHTML = '<img src="../../problems/sum_of_integers/output.svg" width="340"/>';
document.getElementById('algorithm_icon').innerHTML = '<img src="../../icons/algorithms/sum_of_integers.svg" width="100"/>';
document.getElementById('atitle').innerHTML = "合計";
document.getElementById('atitle_en').innerHTML = "(Sum)";
document.getElementById('abstract').innerHTML = "我們用一維陣列變數來管理給定的整數，並另外準備 1 個記錄合計值的變數。";
document.getElementById('explanation').innerHTML = "本書在視覺化演算法時，會將重複處理分成幾個連續的步驟（框）來表示。透過重複處理，我們可以從陣列 A 的最前端開始，依序載入元素並將其值累加到 sum 變數中。sum 需先初始化為 0。";
document.getElementById('note').innerHTML = "言都有內建計算陣列元素總和的 sum（）函式。不過有些程式語言需要先初始化記錄合計值的變數！此外，由於要將多個元素累加到 1 個變數中，因此必須注意是否會出現溢位（overflow）問題（編註：溢位是指超過資料型別所能儲存的範圍）。";
document.getElementById('application').innerHTML = "計算陣列元素的合計值是一個經常會用到的演算法喔！";
document.getElementById('structure').innerHTML = '<tr><td style="text-align:center;width:100"><img src="../../icons/structures/A1D.svg" /><br/><br/><img src="../../icons/structures/A0D.svg" /><br/><br/></td><td class="frame">&nbsp;<img height="160" class="frame_svg" valign="middle" src="space_st.svg" />&nbsp;</td></tr><tr><td></td><td class="caption">一維陣列與單節點</td></tr>';
document.getElementById('variable').innerHTML = '<tr><th class="scene_desc" colspan="3">データ</th></tr><tr><td class="symbol"><img src="variable_A.svg" /></td><td>整數序列</td><td class="code">A</td></tr><tr><td class="symbol"><img src="variable_sum.svg" /></td><td>元素的合計值</td><td class="code">sum</td></tr>';
document.getElementById('formula').innerHTML = '<tr><th class="scene_desc" colspan="3">輸入與初始化</th></tr><tr><td class="symbol"><img src="formula_all.svg" /></td><td>載入整數序列。</td><td class="code"></td></tr><tr><td class="symbol"><img src="formula_ini.svg" /></td><td>將合計值初始化為 0。</td><td class="code">sum &larr; 0</td></tr><tr><th class="scene_desc" colspan="3">累加</th></tr><tr><td class="symbol"><img src="formula_i.svg" /></td><td>載入第 i 個元素。</td><td class="code">A[i]</td></tr><tr><td class="symbol"><img src="formula_t.svg" /></td><td>將載入的元素累加到 sum 中。</td><td class="code">sum &larr; sum + A[i]</td></tr><tr><td class="symbol"><img src="formula_passed.svg" /></td><td>累加過的範圍。</td><td class="code">區間[0, i]</td></tr><tr><th class="scene_desc" colspan="3">輸出</th></tr><tr><td class="symbol"><img src="formula_out.svg" /></td><td>輸出合計值。</td><td class="code"></td></tr>';
document.getElementById('scheme').innerHTML = '<tr><td style="text-align:center;width:100"><img src="anim_qr.svg" width="80"/></td><td class="frame"><hr class="separator"/><img height="160" class="frame_svg" src="scheme_step1.svg" /><p class="caption">將陣列元素累加到 sum 中。</p></td></tr>';
document.getElementById('scene').innerHTML = '<div><p><b class="scene_desc">輸入與初始化</b><br/><img src="scene_0.svg" alt="合計（Sum） | 輸入與初始化" title="合計（Sum） | 輸入與初始化"/></p></div><div><p><b class="scene_desc">累加</b><br/><img src="scene_1.svg" alt="合計（Sum） | 累加" title="合計（Sum） | 累加"/></p></div><div><p><b class="scene_desc">輸出</b><br/><img src="scene_2.svg" alt="合計（Sum） | 輸出" title="合計（Sum） | 輸出"/></p></div>';
document.getElementById('complexity').innerHTML = '';
document.getElementById('prerequisites').innerHTML = '';
MathJax.Hub.Queue(["Typeset",MathJax.Hub]);};